name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REGISTRY: account_id.dkr.ecr.us-east-1.amazonaws.com
      ECR_REPOSITORY: my-docker-repo
      IMAGE_TAG: ${{ github.run_number }}

    steps:
    # Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up JDK 11 (for Maven)
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'

    # Set up Maven for the build
    - name: Set up Maven
      uses: s4u/maven-settings-action@v2

    # Build the Spring Boot project with Maven
    - name: Build with Maven
      run: mvn clean install

    # Log in to Amazon ECR
    - name: Log in to Amazon ECR
      id: ecr-login
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

    # Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # Push the Docker image to Amazon ECR
    - name: Push Docker image to ECR
      run: |
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # Deploy to Kubernetes using Helm
    - name: Deploy with Helm
      run: |
        helm upgrade --install first ./mychart --namespace helm-deployment --set image.tag=$IMAGE_TAG

    # Clean up Docker images to free up space
    - name: Clean up Docker images
      run: |
        docker rmi $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
